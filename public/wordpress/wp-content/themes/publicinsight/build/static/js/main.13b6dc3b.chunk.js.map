{"version":3,"sources":["assets/Icons/delete.png","assets/Icons/edit.png","components/Spinner/index.js","containers/Admin/redux/reducers.js","rootReducer.js","components/Spinner/reducer.js","store.js","components/DeleteModal.js","api/index.js","assets/index.js","utils/contants.js","containers/MyPost/MyPostRow.js","components/DefaultPagination.js","containers/MyPost/index.js","components/Spinner/action.js","containers/CreatePost/alertModal.js","containers/CreatePost/index.js","configs/routes.js","containers/Router.js","utils/fixDropdown.js","App.js","containers/Admin/redux/action.js","containers/Admin/postAdmin.js","utils/postUtils.js","components/CustomSelect/index.js","components/CustomPagination/index.js","containers/Admin/listUser.js","components/AlertModal.js","containers/Admin/View.js","containers/Admin/index.js","AdminApp.js","serviceWorker.js","index.js","assets/Image/default_image.jpg","assets/Icons/eye.png"],"names":["module","exports","loadingStyle","display","justifyContent","alignItems","width","height","position","top","left","zIndex","background","connect","state","isLoading","loading","style","className","role","initState","postAdmin","listUser","pageCountListUser","currentPageListUser","pageCountListPost","currentPageListPost","countTotalPage","totalItem","Math","floor","root","action","type","admin","payload","posts","data","current_page","total","users","combineReducers","middlewares","thunk","modal","store","createStore","rootReducer","applyMiddleware","DeleteModal","name","isOpen","onDelete","toggle","setState","onYesClick","this","Modal","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","registerModal","ref","show","Error","BASE_ENDPOINT","api","axios","create","baseURL","timeout","headers","document","getElementById","wpheader","value","getDetailPostAdmin","_id","get","getListPostAdmin","page","approvePost","post","id","rejectPost","message","getDetailPost","getMyPostList","params","deletePost","delete","getAuthors","getTags","getListUser","updateAllowCreatePost","put","IC_EYE","require","IC_DELETE","IC_EDIT","POST_STATE","draft","submitted","rejected","published","POST_STATE_COLOR","approved","POST_TYPE_COLOR","news","comment","analysis","defaultImage","MyPostRow","reload","checkUser","tag","tags","map","i","Row","Col","md","to","ID","window","location","href","url","post_title","overflow","post_excerpt","src","thumbnailUrl","alt","objectFit","outline","size","border","a","DefaultPagination","onChangePage","pageSize","count","onChangePageSize","hidePageSize","totalPage","ceil","pageSizes","useMemo","label","useState","pageInput","setPageInput","useEffect","Pagination","cn","styles","container","p","marginRight","indicatorsContainer","margin","control","borderRadius","minHeight","find","options","onChange","e","newPageSize","Number","PaginationItem","disabled","PaginationLink","previous","Label","htmlFor","target","onKeyUp","keyCode","next","MyPost","setPage","URL","searchParams","useAsync","promiseFn","watchFn","prev","current","idx","_","allowCreatePost","backgroundColor","Object","keys","key","Progress","animated","length","Alert","setLoading","dispatchSetLoading","dispatch","AlertModal","props","callback","noCancel","CreatePost","onBack","edited","isOpenModal","searchTags","res","optionsTag","searchAuthors","optionsAuthor","body","post_content","preamble","headline","avatar","avatarOld","author","authors","display_name","acceptTerm","removePTagInList","bodyString","replace","componentDidMount","getPostId","pathname","split","checkEmpty","check","showAlertHeadline","showAlertAcceptTerm","showAlertPreamble","showAlertImage","showAlertBody","onCreatePost","bodyPortable","avatarUpload","formData","FormData","append","file","status","error","mainImageUrl","console","log","returnOption","option","setEdited","actionType","Form","form","onSubmit","FormGroup","Input","bsSize","config","allowedContent","removePlugins","toolbar","trim","editor","getData","isMulti","onMenuOpen","files","createObjectURL","imagePicker","click","CustomInput","checked","mapDispatchToProps","path","component","routes","route","index","exact","dropdownMenu","getElementsByClassName","dropdownBtn","addEventListener","transform","App","React","fixDropdown","Router","getListUsers","PostAdmin","renderAction","cursor","onClickAction","renderEmail","email","textDecorationLine","showTag","reduce","text","Table","bordered","hover","post_author","getStateString","CustomSelected","PureComponent","CustomPagination","changePage","parseInt","pageNumberInput","changePageParams","onChangePageNumber","onNextClick","onPrevClick","clickFirstPage","clickLastPage","pageCount","pageNumber","newPage","currentPage","toString","prevProps","prevCurrentPage","prevDisabled","nextDisabled","filter","changePageSize","ListUser","user_email","company_name","address_line_1","updateAllowCreate","clickOk","Admin","activeTab","isOpenDetail","isOpenNote","postShow","isOpenAlert","rejectMessage","getListPost","tab","toggleModalDetail","toggleModalNote","renderModalNoteReject","centered","rows","placeholder","rejectPostAdmin","mess","approvePostAdmin","toggleAlert","renderModalDetail","dangerouslySetInnerHTML","__html","renderFooterModalDetail","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","sm","toogle","View","AdminApp","Boolean","hostname","match","indexOf","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.13b6dc3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.aa4cd934.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.824f47de.png\";","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst loadingStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 99999,\r\n  background: \"rgba(0, 0, 0, 0.3)\"\r\n}\r\n\r\nexport const Spinner = ({ isLoading }) => {\r\n    return (isLoading ? (\r\n        <div style={loadingStyle}>\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n    ) : null);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.loading.isLoading\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(Spinner);","const initState = {\n  postAdmin: [],\n  listUser: [],\n  pageCountListUser: 1,\n  currentPageListUser: 1,\n  pageCountListPost: 1,\n  currentPageListPost: 1\n};\n\nconst countTotalPage = (totalItem) => {\n  if (totalItem % 10 === 0) return totalItem / 10;\n  else return Math.floor(totalItem / 10) + 1;\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"SET_LIST_POST_ADMIN\":\n      return {\n        ...state,\n        postAdmin: action.payload.posts.data,\n        currentPageListPost: action.payload.posts.current_page,\n        pageCountListPost: countTotalPage(action.payload.posts.total)\n      };\n    case \"SET_LIST_USER\":\n      return {\n        ...state,\n        listUser: action.payload.users.data,\n        currentPageListUser: action.payload.users.current_page,\n        pageCountListUser: countTotalPage(action.payload.users.total)\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\r\n\r\nimport loading from \"./components/Spinner/reducer\";\r\nimport admin from \"./containers/Admin/redux/reducers\";\r\n\r\nconst root = {\r\n  loading,\r\n  admin\r\n};\r\n\r\nexport default combineReducers(root);\r\n","const loadingReducer = (\r\n  state = {\r\n    isLoading: false,\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { logger } from 'redux-logger';\r\n\r\nconst middlewares = [thunk];\r\nif (process.env.NODE_ENV === `development`) {\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nlet modal\n\nexport default class DeleteModal extends Component {\n  static registerModal = (ref) => {\n    modal = ref\n  }\n\n  static show = (name, onDelete) => {\n    if (modal) {\n      modal.setState({ isOpen: true, name, onDelete })\n    } else {\n      throw new Error('You must registerModal(ref) first')\n    }\n  }\n\n  state = {\n    name: '',\n    isOpen: false,\n    onDelete: () => null,\n  }\n\n  render() {\n    const { isOpen, name } = this.state\n    return (\n      <Modal\n        isOpen={isOpen}\n        toggle={this.toggle}\n      >\n        <ModalHeader toggle={this.toggle}>\n          Delete {name}\n        </ModalHeader>\n        <ModalBody>\n          Are you sure you want to delete {name}?\n      </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={this.onYesClick}\n          >Delete</Button>\n          <Button\n            color=\"secondary\"\n            onClick={this.toggle}\n          >Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  onYesClick = () => {\n    this.toggle()\n    this.state.onDelete()\n  }\n\n}\n","import axios from 'axios';\r\n\r\nconst BASE_ENDPOINT = 'http://publiccloud.local/pi/wp-json'\r\n//'https://publicbi.se/wp-json'\r\n// const BASE_ENDPOINT = 'http://pipro-env-stage.eba-28wbv7ib.eu-north-1.elasticbeanstalk.com/'\r\nexport let api = axios.create({\r\n  baseURL: BASE_ENDPOINT,\r\n  timeout: 30000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n})\r\n\r\nexport const apiUpload = axios.create({\r\n  baseURL: BASE_ENDPOINT,\r\n  timeout: 15000,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  }\r\n});\r\n\r\nconst element = document.getElementById('wp-header');\r\nif(element != null) {\r\n  const wpheader = document.getElementById('wp-header').value;\r\n  if(wpheader) {\r\n    api = axios.create({\r\n      baseURL: BASE_ENDPOINT,\r\n      timeout: 30000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'X-WP-Nonce' : wpheader\r\n      },\r\n    })\r\n  }\r\n}\r\n// Admin\r\nexport const getDetailPostAdmin = (_id) => api.get(`/api/post/get?id=${_id}`);\r\nexport const getListPostAdmin = (page) => api.get(`/api/post/list?page=${page}`);\r\nexport const approvePost = (_id) => api.post('/api/post/approve', {id: _id})\r\nexport const rejectPost = (_id, message) => api.post('/api/post/reject', { id: _id, message });\r\n\r\n// My Post\r\nexport const getDetailPost = (_id) => api.get(`/api/my-post/get?id=${_id}`);\r\nexport const getMyPostList = ({ page, state, type }) => api.get(`/api/my-post/list`, { params: { page, state, type } })\r\nexport const createPost = (data) => api.post('/api/my-post/save', data);\r\nexport const deletePost = ({ id }) => api.delete('/api/my-post/delete', { params: { id } })\r\n\r\n// Author\r\nexport const getAuthors = (page) => api.get(`/api/author/search?page=${page}`);\r\n\r\n// Tag\r\nexport const getTags = (page) => api.get(`/api/tag/search?page=${page}`)\r\n\r\nexport const getAuthId = () => api.get('/api/getAuth0Id');\r\n\r\nexport const getListUser = (page) => api.get(`/api/user/getUsers?page=${page}`);\r\n\r\nexport const updateAllowCreatePost = id => api.put(`/api/user/updateAllowCreatePost?id=${id}`)\r\n","export const IC_EYE = require(\"./Icons/eye.png\");\r\nexport const IC_DELETE = require(\"./Icons/delete.png\");\r\nexport const IC_EDIT = require(\"./Icons/edit.png\");\r\n\r\n","export const POST_STATE = {\n    draft: \"Draft\",\n    submitted: \"Waiting for Approval\",\n    rejected: \"Rejected\",\n    published: 'Published'\n}\n\nexport const POST_STATE_COLOR = {\n    draft: \"blue\",\n    submitted: \"green\",\n    rejected: \"red\",\n    approved: 'black'\n}\n\nexport const POST_TYPE_COLOR = {\n    news: 'short',\n    comment: 'comment',\n    analysis: 'analysis',\n}","import React, { useRef } from \"react\";\nimport { IC_DELETE, IC_EDIT, IC_EYE } from \"../../assets\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport {\n  POST_STATE,\n  POST_STATE_COLOR,\n  POST_TYPE_COLOR,\n} from \"../../utils/contants\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport DeleteModal from \"../../components/DeleteModal\";\nimport { deletePost } from \"../../api\";\n\nconst defaultImage = require(\"../../assets/Image/default_image.jpg\");\n\nconst MyPostRow = ({ post, reload, checkUser }) => {\n  const tags = post.tags ? post.tags.map((i) => i.name) : [];\n  const tag = tags[0] || \"\";\n\n  const onDelete = () => {\n    DeleteModal.show(\"post\", async () => {\n      try {\n        await deletePost({ id: post.ID });\n        reload();\n      } catch (error) {}\n    });\n  };\n\n  return (\n    <Row className=\"pb-2 mb-2 border-bottom\">\n      <Col md=\"8\">\n        <div className=\"d-flex flex-column justify-content-between h-100\">\n          <div>\n            <div className=\"font-weight-bold\">{tag}</div>\n            <Link to={checkUser && post.state !== \"published\" && post.state !== \"submitted\" && `/post/${post.ID}`} className=\"p-0 text-dark\">\n              <i\n                className={\n                  `fas fa-square-full ${POST_TYPE_COLOR[post.type]} i-small`}\n              />\n              <span className=\"font-weight-bold\" onClick={() => {\n                if (post.state === \"published\") { \n                  window.location.href = (post.url) \n                }\n              } }> {post.post_title}</span>\n            </Link>\n            <div>\n              <div\n                style={{\n                  display: \"block\",\n                  overflow: \"hidden\",\n                  height: \"50px\",\n                  color: \"gray\",\n                }}\n              >\n                {post.post_excerpt}\n              </div>\n            </div>\n          </div>\n          <div>\n            <span\n              className=\"font-italic\"\n              style={{ color: POST_STATE_COLOR[post.state] || \"black\" }}\n            >\n              {POST_STATE[post.state]}\n            </span>\n          </div>\n        </div>\n      </Col>\n      <Col md=\"3\" className=\"d-flex align-items-center\">\n        <img\n          src={post.thumbnailUrl || defaultImage}\n          alt=\"mainImage\"\n          style={{ width: \"100%\", height: \"150px\", objectFit: \"contain\" }}\n        />\n      </Col>\n      <Col className=\"d-flex flex-column align-items-center\">\n        {post.state !== \"published\" && post.state !== \"submitted\" && checkUser && <Link\n          to={`/post/${post.ID}`}\n        >\n          <img\n            alt=\"edit\"\n            src={IC_EDIT}\n            style={{ height: \"25px\", width: \"25px\" }}\n          />\n        </Link>}\n        {checkUser && <Button outline size=\"sm\" style={{ border: \"none\" }} onClick={onDelete}>\n          {\" \"}\n          <img\n            alt=\"delete\"\n            src={IC_DELETE}\n            style={{ height: \"25px\", width: \"25px\" }}\n          />\n        </Button>}\n        {post.state === \"published\" && <Button outline size=\"sm\" style={{ border: \"none\" }} onClick={() => window.location.href = (post.url)}>\n          {\" \"}\n          <img\n            alt=\"view\"\n            src={IC_EYE}\n            style={{ height: \"25px\", width: \"25px\" }}\n          />\n        </Button>}\n      </Col>\n    </Row>\n  );\n};\n\nexport default MyPostRow;\n","import cn from 'classnames';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport Select from 'react-select';\nimport { Input, Label, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\n\nconst DefaultPagination = ({ onChangePage, page, pageSize = 10, count = 0, onChangePageSize, hidePageSize, className }) => {\n  const totalPage = Math.ceil(count / pageSize)\n  const pageSizes = useMemo(() =>\n    [10, 30, 50, 100].map(i => ({ value: i, label: i })), [])\n  const [pageInput, setPageInput] = useState(page)\n\n  useEffect(() => {\n    setPageInput(page)\n  }, [page])\n\n  return (\n    <Pagination className={cn(\"grid-pagination\", className)}>\n      {!hidePageSize ? (\n        <Select\n          styles={{\n            container: (p) => ({\n              ...p,\n              marginRight: \"0.5rem\",\n              width: 70,\n              height: 32,\n            }),\n            indicatorsContainer: (p) => ({\n              ...p,\n              margin: -4,\n              width: 40,\n            }),\n            control: (p) => ({\n              ...p,\n              borderRadius: 0,\n              minHeight: 32,\n            }),\n          }}\n          value={pageSizes.find(i => i.value === pageSize)}\n          options={pageSizes}\n          onChange={(e) => {\n            const newPageSize = Number(e && e.value)\n            if (newPageSize !== pageSize && onChangePageSize) {\n              onChangePageSize(newPageSize)\n              onChangePage(1)\n            }\n          }}\n        />\n      ) : null}\n      <PaginationItem disabled={page < 2}>\n        <PaginationLink\n          onClick={() => onChangePage(page - 1)}\n          previous\n          tag=\"button\"\n        >\n          Prev\n              </PaginationLink>\n      </PaginationItem>\n      <PaginationItem>\n        <PaginationLink onClick={() => onChangePage(1)} tag=\"button\">\n          1\n            </PaginationLink>\n      </PaginationItem>\n\n      <Label className=\"page-input-label\" htmlFor=\"pageNumberInput\" />\n      <input\n        type=\"text\"\n        value={pageInput}\n        onChange={e => setPageInput(Number(e.target.value) || 1)}\n        className=\"mx-2 p-0 text-center\"\n        onKeyUp={(e) => { if (e.keyCode === 13) { onChangePage(pageInput) } }}\n        style={{ width: '45px', border: '1px solid #dee2e6', color: '#007bff' }}\n      />\n      <PaginationItem>\n        <PaginationLink onClick={() => { onChangePage(totalPage) }} tag=\"button\">\n          {totalPage}\n        </PaginationLink>\n      </PaginationItem>\n\n      <PaginationItem disabled={page > totalPage - 1}>\n        <PaginationLink onClick={() => { onChangePage(page + 1) }} next tag=\"button\">\n          Next\n              </PaginationLink>\n      </PaginationItem>\n    </Pagination>\n  )\n}\n\nexport default DefaultPagination\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Alert, Progress } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport idx from 'idx';\r\nimport { useAsync } from 'react-async';\r\nimport { getMyPostList } from \"../../api\";\r\nimport MyPostRow from './MyPostRow';\r\nimport DefaultPagination from \"../../components/DefaultPagination\";\r\nimport { POST_STATE } from '../../utils/contants';\r\nimport cn from 'classnames';\r\n\r\nconst MyPost = () => {\r\n  const [page, setPage] = useState(1)\r\n  const [state, setState] = useState('')\r\n\r\n  const url = new URL(window.location.href)\r\n  const type = url.searchParams.get('type')\r\n  //$(\".filter-type\").text()\r\n  const { data, isLoading, reload } = useAsync({\r\n    promiseFn: getMyPostList,\r\n    page,\r\n    state,\r\n    type,\r\n    watchFn: (prev, current) => prev.page !== current.page ||\r\n      prev.state !== current.state\r\n  })\r\n\r\n  const posts = idx(data, _ => _.data.posts.data) || []\r\n  const total = idx(data, _ => _.data.posts.total) || 0\r\n  const checkUser = idx(data, _ => _.data.posts.allowCreatePost) || false\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <Row>\r\n        <Col md=\"12\" className=\"d-flex flex-row justify-content-between mb-3\">\r\n          <h4>MY POSTS</h4>\r\n          {checkUser && <Link className=\"btn btn.primary\" style={{ backgroundColor: '#007bff', color: '#fff' }} to=\"/create-post\">Create new post</Link>}\r\n        </Col>\r\n        <Col md=\"3\">\r\n          <h6>Filters</h6>\r\n          {['', ...Object.keys(POST_STATE)].map(key => (\r\n            <Row key={key}>\r\n              <Button color=\"link\" className=\"text-dark\" onClick={() => {\r\n                setState(key)\r\n                setPage(1)\r\n              }}>\r\n                <i className={cn(\"far mr-1\", key === state ? \"fa-check-square\" : \"fa-square\")} />\r\n                {POST_STATE[key] || 'All'}\r\n              </Button>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n        {isLoading ? (\r\n          <Col>\r\n            <Progress animated value={100} />\r\n          </Col>\r\n        ) : (posts.length ? (\r\n          <Col md=\"9\">\r\n            {posts.map(post => (\r\n              <MyPostRow\r\n                key={post.ID}\r\n                post={post}\r\n                reload={reload}\r\n                checkUser={checkUser}\r\n              />\r\n            ))}\r\n            <Row>\r\n              <Col md={12} className=\"p-0 d-flex justify-content-end\">\r\n                <DefaultPagination\r\n                  hidePageSize\r\n                  page={page}\r\n                  count={total}\r\n                  onChangePage={setPage}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        ) : (\r\n            <Col md=\"9\">\r\n              <Alert color=\"primary\">No post found.</Alert>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPost","export const setLoading = (isLoading) => ({\r\n  type: 'SET_LOADING',\r\n  isLoading,\r\n})\r\n\r\nexport const dispatchSetLoading = (isLoading) => dispatch => {\r\n  dispatch(setLoading(isLoading));\r\n}","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalFooter, ModalBody, Button } from \"reactstrap\";\n\nexport default class AlertModal extends Component {\n  render() {\n    const {message, isOpen, toggle, callback, noCancel} = this.props;\n    return (\n      <Modal isOpen={isOpen} toggle={() => {\n        if (noCancel && callback) callback()\n        toggle()\n      }}>\n        <ModalHeader toggle={() => {\n          if (noCancel && callback) callback()\n          toggle()\n        }}>Alert</ModalHeader>\n        <ModalBody>{message}</ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => {\n            if (callback) callback()\n            toggle()\n          }}>\n            Ok\n          </Button>\n          {callback && !noCancel && <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button> }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {\r\n  Form,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { createPost, getTags, getAuthors } from \"../../api\";\r\nimport { dispatchSetLoading } from \"../../components/Spinner/action\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { getDetailPost } from \"../../api\";\r\nimport AlertModal from \"./alertModal\";\r\nconst defaultImage = require(\"../../assets/Image/default_image.jpg\");\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _id: \"\",\r\n      avatarUpload: null,\r\n      avatar: null,\r\n      avatarOld: null,\r\n      body: \"\",\r\n      bodyPortable: \"\",\r\n      headline: \"\",\r\n      preamble: \"\",\r\n      tags: \"\",\r\n      author: \"\",\r\n      acceptTerm: false,\r\n      actionType: \"draft\",\r\n      showAlertAcceptTerm: false,\r\n      showAlertHeadline: false,\r\n      showAlertPreamble: false,\r\n      showAlertBody: false,\r\n      showAlertImage: false,\r\n      optionsTag: [],\r\n      optionsAuthor: [],\r\n      isOpenModal: false,\r\n      message: \"\",\r\n      edited: false,\r\n      callback: null,\r\n      noCancel: false\r\n    };\r\n  }\r\n\r\n  onBack = () => {\r\n    const { edited } = this.state\r\n    if (edited) {\r\n      this.setState({\r\n        isOpenModal: true,\r\n        message: \"Content has changed, are you sure to discard your changes and back to list?\",\r\n        callback: () => {\r\n          window.location.href = \"/myposts\"\r\n        }\r\n      })\r\n\r\n      return\r\n    } \r\n\r\n    window.location.href = \"/myposts\"\r\n  }\r\n\r\n  searchTags = async (page) => {\r\n    try {\r\n      const res = await getTags(1);\r\n      const options = res.data.data.map((e) => ({\r\n        value: e.name,\r\n        label: e.name,\r\n      }));\r\n      this.setState({ optionsTag: options });\r\n    } catch {}\r\n  };\r\n\r\n  searchAuthors= async (page) => {\r\n    try {\r\n      const res = await getAuthors(1);\r\n      const options = res.data.data.map((e) => ({\r\n        value: e.name,\r\n        label: e.name,\r\n      }));\r\n      this.setState({ optionsAuthor: options });\r\n    } catch {}\r\n  }\r\n\r\n  getDetailPost = async (_id) => {\r\n    try {\r\n      this.props.dispatchSetLoading(true);\r\n      const res = await getDetailPost(_id);\r\n      const post = res.data.post;\r\n      this.setState({\r\n        body: post.post_content,\r\n        preamble: post.post_excerpt,\r\n        headline: post.post_title,\r\n        _id: post.ID,\r\n        avatar: post.thumbnailUrl,\r\n        avatarOld: post.thumbnailUrl,\r\n        tags: post.tags ? post.tags.map((e)=> e.name) : [],\r\n        author: post.authors ? post.authors.map((e) => e.display_name): [],\r\n        acceptTerm: post.acceptTerm     \r\n      })\r\n      this.props.dispatchSetLoading(false);\r\n    } catch {\r\n      this.props.dispatchSetLoading(false);\r\n    }\r\n  };\r\n\r\n  removePTagInList = bodyString => bodyString.replace(/<li>\\n\\t<p>/g, \"<li>\").replace(/<\\/p>\\n\\t<\\/li>/g, \"</li>\")\r\n\r\n  componentDidMount = () => {\r\n    const id = this.getPostId()\r\n    if (id) this.getDetailPost(id)\r\n    this.searchTags(1);\r\n    this.searchAuthors(1)\r\n  };\r\n\r\n  getPostId = () => {\r\n    const arr = this.props?.location?.pathname.split(\"/\")\r\n    return arr[2]\r\n  }\r\n\r\n  checkEmpty = () => {\r\n    const { headline, acceptTerm, preamble, body, avatar } = this.state;\r\n    let check = 0;\r\n    if (headline === \"\") {\r\n      this.setState({ showAlertHeadline: true });\r\n      check = 1;\r\n    }\r\n    if (!acceptTerm) {\r\n      this.setState({ showAlertAcceptTerm: true });\r\n      check = 1;\r\n    }\r\n    if (preamble === \"\") {\r\n      this.setState({ showAlertPreamble: true });\r\n      check = 1;\r\n    }\r\n    if (avatar === null) {\r\n      this.setState({ showAlertImage: true });\r\n      check = 1;\r\n    }\r\n    if (body === \"\") {\r\n      this.setState({ showAlertBody: true });\r\n      check = 1;\r\n    }\r\n    return check;\r\n  };\r\n\r\n  onCreatePost = async (action) => {\r\n    const {\r\n      _id,\r\n      avatar,\r\n      preamble,\r\n      tags,\r\n      body,\r\n      bodyPortable,\r\n      headline,\r\n      author,\r\n      avatarOld,\r\n      acceptTerm,\r\n      avatarUpload,\r\n    } = this.state;\r\n\r\n    if (action === \"submit\") {\r\n      if (this.checkEmpty()) return;\r\n    } else\r\n      this.setState({\r\n        showAlertImage: false,\r\n        showAlertPreamble: false,\r\n        showAlertHeadline: false,\r\n        showAlertAcceptTerm: false,\r\n        showAlertBody: false,\r\n      });\r\n\r\n    try {\r\n      this.props.dispatchSetLoading(true);\r\n      let formData = new FormData();\r\n\r\n      if (_id) formData.append(\"_id\", _id);\r\n      formData.append(\"headline\", headline);\r\n      formData.append(\"preamble\", preamble);\r\n      formData.append(\"actionType\", action);\r\n      formData.append(\"body\", body);\r\n      formData.append(\"tags\", this.state.tags);\r\n      formData.append(\"authors\", this.state.author);\r\n      formData.append(\"acceptTerm\", acceptTerm);\r\n\r\n      if (avatarOld !== null) {\r\n        if (avatar === null) formData.append(\"mainImage\", null); // remove\r\n        if (avatar !== avatarOld)\r\n          formData.append(\"mainImage\", avatarUpload.file); // thay đổi\r\n      }\r\n\r\n      if (avatarOld === null) {\r\n        if (avatar !== null) formData.append(\"mainImage\", avatarUpload.file); // thêm mới\r\n      }\r\n\r\n      const res = await createPost(formData);\r\n      if (res.data && !res.data.status) throw new Error(res.data.error)\r\n\r\n      // lưu lại id sau khi gọi api\r\n      if (_id === \"\") this.setState({ _id: res.data.post._id });\r\n      // lưu ảnh\r\n      if (res.data.mainImageUrl) {\r\n        this.setState({\r\n          avatar: res.data.post.mainImageUrl,\r\n          avatarOld: res.data.post.mainImageUrl,\r\n        });\r\n      } else {\r\n        this.setState({ avatarOld: avatar });\r\n      }\r\n      this.props.dispatchSetLoading(false);\r\n      this.setState({\r\n        isOpenModal: true,\r\n        message:\r\n          action === \"draft\"\r\n            ? \"The post has been saved successfully\"\r\n            : \"The post has been saved and submitted successfully\",\r\n        edited: false,\r\n        callback: () => window.location.href = \"/myposts\",\r\n        noCancel: true\r\n      });\r\n    } catch (err) {\r\n      this.props.dispatchSetLoading(false);\r\n      this.setState({\r\n        isOpenModal: true,\r\n        message: err.message,\r\n      });\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpenModal: !this.state.isOpenModal, callback: null, noCancel: false });\r\n  };\r\n\r\n  returnOption = (option) => {\r\n    const arr = option.map((e) => ({value: e, label: e}))\r\n    return arr\r\n  }\r\n\r\n  setEdited = status => this.setState({edited: status})\r\n\r\n  render() {\r\n    const {\r\n      avatar,\r\n      body,\r\n      bodyPortable,\r\n      headline,\r\n      preamble,\r\n      tags,\r\n      author,\r\n      acceptTerm,\r\n      showAlertAcceptTerm,\r\n      showAlertHeadline,\r\n      showAlertPreamble,\r\n      showAlertBody,\r\n      showAlertImage,\r\n      isOpenModal,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container\"> \r\n        <div className=\"p-3\">\r\n          <h5 className=\"mb-2\">{`${this.getPostId() ? \"EDIT\" : \"CREATE\"} POST`}</h5>\r\n          <Form\r\n            ref={(ref) => {\r\n              this.form = ref;\r\n            }}\r\n            onSubmit={(e) => console.log(\"submit \", e)}\r\n          >\r\n            <div className=\"mb-5\">\r\n              <h6>Headline</h6>\r\n              <FormGroup>\r\n                <Input\r\n                  name=\"headline\"\r\n                  id=\"headline\"\r\n                  bsSize=\"sm\"\r\n                  value={headline}\r\n                  onChange={(e) => this.setState({ headline: e.target.value })}\r\n                  onKeyUp={() => this.setEdited(true)}\r\n                />\r\n                {showAlertHeadline && headline === \"\" && (\r\n                  <Alert className=\"mt-2\" color=\"danger\">\r\n                    Headline must not be empty\r\n                  </Alert>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"mb-5\">\r\n              <h6>Preamble</h6>\r\n              <FormGroup>\r\n                <Input\r\n                  name=\"preamble\"\r\n                  id=\"preamble\"\r\n                  bsSize=\"sm\"\r\n                  value={preamble}\r\n                  onChange={(e) => this.setState({ preamble: e.target.value })}\r\n                  onKeyUp={() => this.setEdited(true)}\r\n                />\r\n                {showAlertPreamble && preamble === \"\" && (\r\n                  <Alert className=\"mt-2\" color=\"danger\">\r\n                    Preamble must not be empty\r\n                  </Alert>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"mb-5\">\r\n              <h6>Body</h6>\r\n              <CKEditor\r\n                data={this.state.body}\r\n                config={{\r\n                  allowedContent: true,\r\n                  removePlugins: \"Paste\",\r\n                  toolbar: [\r\n                    [\r\n                      \"Bold\",\r\n                      \"Italic\",\r\n                      \"Strike\",\r\n                      \"Undo\",\r\n                      \"Redo\",\r\n                      \"Underline\",\r\n                      \"NumberedList\",\r\n                      \"BulletedList\",\r\n                      \"Link\"\r\n                    ],\r\n                  ],\r\n                }}\r\n                onChange={async (e) => {\r\n                  if (bodyPortable && bodyPortable.trim()) {\r\n                    await this.setState({ edited: true })\r\n                  }\r\n                  this.setState({ body: e.editor.getData() });\r\n                }}\r\n              />\r\n              {showAlertBody && body === \"\" && (\r\n                <Alert className=\"mt-2\" color=\"danger\">\r\n                  Body must not be empty\r\n                </Alert>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mb-5\">\r\n              <h6>Tags</h6>\r\n              <CreatableSelect\r\n                value={tags ? this.returnOption(tags): null}\r\n                isMulti\r\n                options={this.state.optionsTag}\r\n                className=\"small\"\r\n                styles={{ height: \"32px\" }}\r\n                onChange={(e) =>\r\n                  this.setState({ tags: e ? e.map((e) => e.value) : \"\" })\r\n                }\r\n                onMenuOpen={() => this.setEdited(true)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-5\">\r\n              <h6>Author</h6>\r\n              <CreatableSelect\r\n                value={author ? this.returnOption(author): null}\r\n                isMulti\r\n                options={this.state.optionsAuthor}\r\n                className=\"small\"\r\n                styles={{ height: \"32px\" }}\r\n                onChange={(e) =>\r\n                  this.setState({ author: e ? e.map((e) => e.value) : \"\" })\r\n                }\r\n                onMenuOpen={() => this.setEdited(true)}\r\n\r\n              />\r\n            </div>\r\n            <div className=\"mb-5\">\r\n              <h6>Image (max size: 2mb)</h6>\r\n              <img\r\n                src={this.state.avatar || defaultImage}\r\n                alt=\"avatar\"\r\n                className=\" center-cropped mb-3\"\r\n                style={{ width: \"100%\", height: \"500px\", objectFit: \"cover\" }}\r\n              />\r\n              <input\r\n                onChange={(e) => {\r\n                  if (e.target.files[0]) {\r\n                    this.setState({\r\n                      avatar: window.URL.createObjectURL(e.target.files[0]),\r\n                      avatarUpload: {\r\n                        file: e.target.files[0],\r\n                        name: e.target.files[0].name,\r\n                      },\r\n                    });\r\n                  }\r\n                }}\r\n                type={\"file\"}\r\n                ref={(ref) => {\r\n                  this.imagePicker = ref;\r\n                }}\r\n                className=\"d-none\"\r\n              />\r\n              {showAlertImage && avatar === null && (\r\n                <Alert className=\"mt-2\" color=\"danger\">\r\n                  Image must not be empty\r\n                </Alert>\r\n              )}\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                className=\"mr-2\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  this.setEdited(true)\r\n                  this.imagePicker.click()\r\n                }}\r\n              >\r\n                Browser\r\n              </Button>{\" \"}\r\n              <Button\r\n                outline\r\n                color=\"secondary\"\r\n                size=\"sm\"\r\n                onClick={() => this.setState({ avatar: null, edited: true })}\r\n              >\r\n                Remove\r\n              </Button>{\" \"}\r\n            </div>\r\n            <div className=\"mb-5\">\r\n              <CustomInput\r\n                type=\"switch\"\r\n                id=\"exampleCustomSwitch\"\r\n                name=\"customSwitch\"\r\n                label=\"Accept terms and condition\"\r\n                checked={acceptTerm}\r\n                onChange={(e) =>\r\n                  this.setState({ acceptTerm: e.target.checked })\r\n                }\r\n                onKeyUp={() => this.setEdited(true)}\r\n\r\n              />\r\n              {showAlertAcceptTerm && !acceptTerm && (\r\n                <Alert className=\"mt-2\" color=\"danger\">\r\n                  You must accept terms and condition\r\n                </Alert>\r\n              )}\r\n            </div>\r\n          </Form>\r\n          <div className=\"border d-flex flex-row align-items-center justyfi-content-between\">\r\n            <div>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"mr-2 px-3\"\r\n                size=\"sm\"\r\n                onClick={() => this.onCreatePost(\"draft\")}\r\n              >\r\n                Save as draft\r\n              </Button>{\" \"}\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                className=\"mr-2 px-3\"\r\n                onClick={() => this.onCreatePost(\"submit\")}\r\n              >\r\n                Save and submit\r\n              </Button>{\" \"}\r\n            </div>\r\n            <div>\r\n              <Button\r\n                color=\"warning\"\r\n                size=\"sm\"\r\n                className=\"mr-2 px-3\"\r\n                onClick={() => this.onBack()}\r\n              >\r\n                Back to list\r\n              </Button>{\" \"}\r\n            </div>\r\n          </div>\r\n          <AlertModal\r\n            isOpen={isOpenModal}\r\n            toggle={this.toggle}\r\n            message={this.state.message}\r\n            callback={this.state.callback}\r\n            noCancel={this.state.noCancel}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchSetLoading\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CreatePost)\r\n","import MyPost from \"../containers/MyPost\"\nimport CreatePost from \"../containers/CreatePost\"\n\nexport default [\n    { path: \"/\", name: \"My post\", component: MyPost },\n    { path: \"/post/:id\", name: \"Post\", component: CreatePost },\n    { path: \"/create-post\", name: \"Create post\", component: CreatePost },\n]","import React from 'react'\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\n\nimport routes from \"../configs/routes\"\n\nexport default () => <HashRouter>\n<Switch>\n  {routes.map((route, index) => <Route key={index} exact path={route.path} component={route.component} />)}\n</Switch>\n</HashRouter>","export default () => {\n    const dropdownMenu = document.getElementsByClassName(\"dropdown-menu\")[0]\n    const dropdownBtn = document.getElementById(\"dropdown_profile\")\n\n    if(dropdownBtn) {\n        dropdownBtn.addEventListener(\"click\", () => {\n            if (dropdownMenu.style.display === 'none' || !dropdownMenu.style.display) {\n                dropdownMenu.style.display = 'block'\n                dropdownMenu.style.transform = \"translate3d(-1px, 34px, 0px)\"\n            } else {\n                dropdownMenu.style.display = 'none'\n            }\n        })\n    }\n}","import * as React from \"react\";\nimport './App.scss'\nimport Spinner from \"./components/Spinner\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport DeleteModal from './components/DeleteModal';\nimport Router from \"./containers/Router\"\n\nimport fixDropdown from \"./utils/fixDropdown\"\n\nconst App = () => {\n  React.useEffect(() => {\n    fixDropdown()\n  }, [])\n  \n  return (\n    <Provider store={store}>\n      <Spinner />\n      <Router />\n      <DeleteModal ref={DeleteModal.registerModal} />\n    </Provider>\n  );\n};\n\nexport default App;\n","import { setLoading } from \"../../../components/Spinner/action\";\nimport { getListPostAdmin, getListUser, updateAllowCreatePost } from \"../../../api\";\n\nexport const getListPost = (page) => async (dispatch) => {\n  dispatch(setLoading(true));\n  try {\n    const res = await getListPostAdmin(page);\n    dispatch({type: \"SET_LIST_POST_ADMIN\", payload: res.data})\n    dispatch(setLoading(false));\n  } catch (err) {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const getListUsers = (page) => async (dispatch) => {\n    dispatch(setLoading(true));\n    try {\n      const res = await getListUser(page);\n      dispatch({type: \"SET_LIST_USER\", payload: res.data})\n      dispatch(setLoading(false));\n    } catch (err) {\n      dispatch(setLoading(false));\n    }\n}\n\nexport const updateAllowCreate = (id, page) => async dispatch => {\n    dispatch(setLoading(true));\n    try {\n      await updateAllowCreatePost(id)\n      const res = await getListUser(page);\n      dispatch({type: \"SET_LIST_USER\", payload: res.data})\n      dispatch(setLoading(false));\n    } catch (err) {\n      dispatch(setLoading(false));\n    }\n}\n","import React, { Component } from \"react\";\nimport { Table, Button, Row, Col } from \"reactstrap\";\nimport IC_EYE from \"../../assets/Icons/eye.png\";\nimport { getStateString } from '../../utils/postUtils';\n\nexport default class PostAdmin extends Component {\n\n  componentDidMount = () => {\n    // this.getListPost(1)\n  }\n\n  renderAction = (_id) => {\n    return (\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <img\n          src={IC_EYE}\n          style={{ height: 20, width: 20, cursor: \"pointer\" }}\n          onClick={() =>this.props.onClickAction(_id)}\n          alt=\"aaa\"\n        />\n      </div>\n    );\n  };\n\n  renderEmail = (email) => {\n    return <Button color=\"link\" className=\"d-flex align-items-center\"><span style={{textDecorationLine: 'underline'}}>{email}</span></Button>;\n  };\n\n  showTag = (tags) => {\n    if (!tags || tags.length === 0) return \"\"\n    const textShow = tags.reduce((text,e, i) => {\n      if (i === tags.length - 1) return text+e.name;\n      return text + e.name +\", \" \n    }, \"\")\n    return textShow\n  }\n\n  render() {\n    const { onClickAction, postAdmin } = this.props;\n    console.log(postAdmin)\n    return (\n      <Row className=\"mt-2\">\n        <Col md=\"12\">\n          <Table bordered hover size=\"sm\" className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Author</th>\n                <th>Tags</th>\n                <th>Created By</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {postAdmin &&\n                postAdmin.map((e, index) => (\n                  <tr key={index}>\n                    <td className=\"align-middle\">{e.headline}</td>\n                    <td className=\"align-middle\">{e.authors}</td>\n                    <td className=\"align-middle\">{this.showTag(e.tags)}</td>\n                    <td className=\"align-middle\">\n                    {e.post_author}\n                    </td>\n                    <td className=\"align-middle\">{getStateString(e.state)}</td>\n                    <td className=\"align-middle\">{this.renderAction(e.ID)}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    );\n  }\n}\n","export function getStateString(state) {\n    switch (state) {\n        case 'draft': {\n            return 'Draft';\n        }\n        case 'submitted': {\n            return 'Submitted';\n        }\n        case 'approved': {\n            return 'Approved';\n        }\n        case 'published': {\n            return 'Published';\n        }\n        case 'rejected': {\n            return 'Rejected'\n        }\n        default: {\n            return '';\n        }\n    }\n}","import React from 'react'\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport Select from \"react-select\";\r\n\r\nexport default class CustomSelected extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <FormGroup>\r\n                {this.props.label && <Label>{this.props.label}</Label>}\r\n                <Select\r\n                    {...this.props}\r\n                />\r\n            </FormGroup>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Pagination, PaginationItem, PaginationLink, Label, Input } from \"reactstrap\";\r\nimport CustomSelected from '../CustomSelect';\r\n\r\nclass CustomPagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageNumberInput: this.props.currentPage || 1,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevCurrentPage = prevProps.currentPage;\r\n    if (this.props.currentPage && prevCurrentPage !== this.props.currentPage) {\r\n      this.setState({ pageNumberInput: this.props.currentPage });\r\n    }\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (e.keyCode === 13) {\r\n      this.props.changePage(parseInt(this.state.pageNumberInput), this.props.changePageParams);\r\n    }\r\n  };\r\n\r\n  onChangePageNumber = e => {\r\n    this.setState({\r\n      pageNumberInput: e.target.value,\r\n    });\r\n  };\r\n\r\n  onNextClick = () => {\r\n    this.changePage(\"relative\", 1);\r\n  };\r\n\r\n  onPrevClick = () => {\r\n    this.changePage(\"relative\", -1);\r\n  };\r\n\r\n  clickFirstPage = () => {\r\n    this.changePage(\"absolute\", 1);\r\n  };\r\n\r\n  clickLastPage = () => {\r\n    this.changePage(\"absolute\", this.props.pageCount);\r\n  };\r\n\r\n  changePage = (type, pageNumber) => {\r\n    let newPage = 1;\r\n    if (type === \"relative\") {\r\n      const { currentPage } = this.props;\r\n      newPage = parseInt(currentPage) + pageNumber;\r\n    }\r\n    if (type === \"absolute\") {\r\n      newPage = pageNumber;\r\n    }\r\n\r\n    this.props.changePage(newPage, this.props.changePageParams);\r\n    this.setState({ pageNumberInput: newPage.toString() });\r\n  };\r\n\r\n  options = [{ label: 10, value: 10 }, { label: 20, value: 20 }, { label: 50, value: 50 }, { label: 100, value: 100 }]\r\n\r\n  render() {\r\n    const prevDisabled = this.props.currentPage <= 1 || !this.props.currentPage;\r\n    const nextDisabled = this.props.currentPage >= this.props.pageCount || !this.props.currentPage;\r\n    return (\r\n      <Pagination className=\"grid-pagination d-flex justify-content-end\">\r\n        <div style={{ width: 80 }} className=\"mr-2\">\r\n          {this.props.pageSize &&\r\n            <CustomSelected\r\n              value={{ label: this.options.filter(option => option.value === this.props.pageSize)[0].label, value: this.props.pageSize }}\r\n              style={{ width: 40 }}\r\n              options={this.options}\r\n              onChange={async e => {\r\n                if (this.props.pageSize === e) return;\r\n                await this.props.changePageSize(e.value)\r\n                this.props.onChangePageSize()\r\n              }}\r\n            />\r\n          }\r\n\r\n        </div>\r\n\r\n        <PaginationItem disabled={prevDisabled}>\r\n          <PaginationLink\r\n            disabled={prevDisabled}\r\n            onClick={this.onPrevClick}\r\n            previous\r\n            tag=\"button\"\r\n          >\r\n            Prev\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem>\r\n          <PaginationLink onClick={this.clickFirstPage} tag=\"button\">\r\n            1\r\n            </PaginationLink>\r\n        </PaginationItem>\r\n\r\n        <Label className=\"page-input-label\" htmlFor=\"pageNumberInput\" />\r\n        <input\r\n          type=\"text\"\r\n          onKeyUp={this.onKeyUp}\r\n          onChange={this.onChangePageNumber}\r\n          value={this.state.pageNumberInput}\r\n          className=\"mx-2 p-0 text-center\"\r\n          style={{ width: '45px', border: '1px solid #dee2e6', color: '#007bff' }}\r\n        />\r\n        <PaginationItem>\r\n          <PaginationLink onClick={this.clickLastPage} tag=\"button\">\r\n            {this.props.pageCount || 1}\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n\r\n        <PaginationItem disabled={nextDisabled}>\r\n          <PaginationLink disabled={nextDisabled} onClick={this.onNextClick} next tag=\"button\">\r\n            Next\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomPagination\r\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { Row, Col, Table, CustomInput } from \"reactstrap\";\nimport { getListUsers, updateAllowCreate } from \"../Admin/redux/action\"\nimport CustomPagination from \"../../components/CustomPagination\";\n\nclass ListUser extends Component {\n  componentDidMount() {\n    // this.getData()\n  }\n\n  getData = () => {\n    const {getListUsers, currentPage} = this.props\n    getListUsers(currentPage)\n  }\n\n  render() {\n    const { listUser } = this.props;\n    return (\n      <>\n      <Row className=\"mt-3\">\n        <Col md=\"12\">\n          <Table bordered hover size=\"sm\" className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Company</th>\n                <th>Address</th>\n                <th>Allow create post</th>\n              </tr>\n            </thead>\n            <tbody>\n              {listUser &&\n                listUser.map((e, index) => (\n                  <tr key={index}>\n                    <td className=\"align-middle\">{e.display_name}</td>\n                    <td className=\"align-middle\">{e.user_email}</td>\n                    <td className=\"align-middle\">{e.company_name}</td>\n                    <td className=\"align-middle\">{e.address_line_1}</td>\n                    <td className=\"text-center\">\n                      <CustomInput \n                        type=\"checkbox\"\n                        id={e._id}\n                        checked={e.allowCreatePost}\n                        onClick={() => this.props.updateAllowCreate(e._id, this.props.currentPage)}\n                      />\n                      {/* {e.allowCreatePost ? 'true' : 'false'} */}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={12} >\n          <CustomPagination\n            pageCount={this.props.pageCountListUser}\n            currentPage={this.props.currentPage}\n            changePage={(currentPage) => {\n              this.props.getListUsers(currentPage);\n            }}\n          />\n        </Col>\n      </Row>\n    </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  listUser: state.admin.listUser,\n  currentPage: state.admin.currentPageListUser,\n  pageCountListUser: state.admin.pageCountListUser,\n})\n\nconst mapDispatchToProps = {\n  getListUsers,\n  updateAllowCreate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUser)","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalFooter, ModalBody, Button } from \"reactstrap\";\n\nexport default class AlertModal extends Component {\n  render() {\n      const {message, isOpen, toggle, clickOk} = this.props;\n    return (\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Alert</ModalHeader>\n        <ModalBody>{message}</ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => clickOk()}>\n            Ok\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux'\nimport {\n  TabContent,\n  TabPane,\n  Row,\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Button,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport PostAdmin from \"./postAdmin\";\nimport ListUser from \"./listUser\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport {dispatchSetLoading} from \"../../components/Spinner/action\"\nimport { getDetailPostAdmin, rejectPost, approvePost } from \"../../api\";\nimport AlertModal from \"../../components/AlertModal\";\n\nconst defaultImage = require(\"../../assets/Image/default_image.jpg\");\n\nclass Admin extends Component {\n  state = {\n    activeTab: \"2\",\n    isOpenDetail: false,\n    isOpenNote: false,\n    postShow: null,\n    isOpenAlert: false,\n    message: \"\",\n    rejectMessage: \"\"\n  };\n\n  componentDidMount = () => {\n    this.props.getListPost(1)\n    this.props.getListUsers(1)\n  };\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) this.setState({ activeTab: tab });\n  };\n\n  toggleModalDetail = () => {\n    this.setState({ isOpenDetail: false });\n  };\n\n  toggleModalNote = () => {\n    this.setState({ isOpenNote: false });\n  };\n\n  onClickAction = async (_id) => {\n    try {\n      this.props.dispatchSetLoading(true)\n      const res = await getDetailPostAdmin(_id);\n      const { post } = res.data\n\n      if (post.state === \"published\") {\n        window.location.href = post.url\n        return \n      }\n\n      this.setState({postShow: post, isOpenDetail: !this.state.isOpenDetail})\n      this.props.dispatchSetLoading(false)\n    } catch {\n      this.props.dispatchSetLoading(false)\n    }\n  };\n\n  showTag = (tags) => {\n    if (!tags || tags.length === 0) return \"\"\n    const textShow = tags.reduce((text,e, i) => {\n      if (i === tags.length - 1) return text+e.name;\n      return text + e.name +\", \" \n    }, \"\")\n    return textShow\n  }\n\n  renderModalNoteReject = () => {\n    const { postShow, rejectMessage } = this.state\n    return (\n      <Modal isOpen={this.state.isOpenNote} toggle={this.toggleModalNote} centered>\n        <ModalHeader toggle={this.toggleModalNote}>\n          Rejecting reason\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"exampleText\"\n              className=\"small\"\n              size=\"sm\"\n              rows={8}\n              placeholder=\"Type something...\"\n              value={rejectMessage}\n              onChange={e => this.setState({ rejectMessage: e.target.value })}\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              this.setState({ isOpenNote: false });\n            }}\n            size=\"sm\"\n          >\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={() => this.rejectPostAdmin(postShow.ID, rejectMessage)} size=\"sm\">\n            Send\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  rejectPostAdmin = async (_id, mess) => {\n    try {\n      this.props.dispatchSetLoading(true)\n      const res = await rejectPost(_id, mess)\n      console.log('resreject', res)\n      this.props.dispatchSetLoading(false)\n      this.setState({isOpenAlert: true, message: \"This post has been rejected successfully\", isOpenNote: false})\n    } catch {\n      this.props.dispatchSetLoading(false)\n      this.setState({isOpenAlert: true, message: \"An error occurred, please try again\"})\n    }\n  }\n\n  clickOk = () => {\n    this.setState({\n      isOpenAlert: false,\n      isOpenDetail: false,\n    })\n    this.props.getListPost(1)\n  }\n\n  approvePostAdmin = async (_id) => {\n    try{\n      this.props.dispatchSetLoading(true)\n      const res = await approvePost(_id)\n      console.log('resapprove', res)\n      this.props.dispatchSetLoading(false)\n      this.setState({isOpenAlert: true, message: \"This post has been approved successfully\"})\n    } catch {\n      this.props.dispatchSetLoading(false)\n      this.setState({isOpenAlert: true, message: \"An error occurred, please try again\"})\n    }\n  }\n\n  toggleAlert = () => this.setState({isOpenAlert: !this.state.isOpenAlert})\n\n  renderModalDetail = (post) => {\n    return (\n      <Modal isOpen={this.state.isOpenDetail} toggle={this.toggleModalDetail}>\n        <ModalHeader className=\"font-weight-bold\" toggle={this.toggleModalDetail}>Post Details</ModalHeader>\n\n        <ModalBody>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Headline</h6>\n          </div>\n          <div className=\"mb-2\">\n            <span>{(post && post.headline !==  \"\") ? post.headline: \"\"}</span>\n          </div>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Preamble</h6>\n          </div>\n          <div className=\"mb-2\">\n            <span>{(post && post.preamble !==  \"\") ? post.preamble: \"\"}</span>\n          </div>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Body</h6>\n          </div>\n          <div className=\"p-2 mb-2\">\n            <span dangerouslySetInnerHTML={{__html: (post && post.body !==  \"\") ? post.body: \"non body\"}}></span>\n          </div>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Tag</h6>\n          </div>\n          <div className=\"mb-2\">\n            <span>{(post && post.tags.length !==0) ? this.showTag(post.tags): \"\"}</span>\n          </div>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Authors</h6>\n          </div>\n          <div className=\"mb-2\">\n            <span>{(post && post.authors !== \"\") ? post.authors: \"\"}</span>\n          </div>\n          <div className=\"mb-2\">\n            <h6 className=\"font-weight-bold\" >Main Image</h6>\n          </div>\n          {post && post.mainImageUrl  &&\n            <img\n              src={post.mainImageUrl}\n              alt=\"avatar\"\n              className=\" center-cropped mb-3\"\n              style={{ width: \"100%\", height: \"300px\", objectFit: \"contain\" }}\n            />}\n          {post && !post.mainImageUrl && \n            <span>\n            {\"non image\"}\n          </span>}\n        </ModalBody>\n\n        <ModalFooter className=\"d-flex\">\n          {post && this.renderFooterModalDetail(post)}\n          {!post && <Button onClick={this.toggleModalDetail} color=\"secondary\">Close</Button>}\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  renderFooterModalDetail = (post) => {\n    if (post.state === 'submitted') return (\n    <div>\n      <Button\n        color=\"danger\"\n        onClick={() => this.setState({isOpenNote: true})}\n        size=\"sm\"\n      >\n        Reject\n      </Button>\n      <Button\n        color=\"primary\"\n        onClick={() => this.approvePostAdmin(post.ID)} \n        size=\"sm\"\n        className=\"ml-2\"\n      >\n        Accept\n      </Button>\n    </div>)\n    return <Button size=\"sm\" onClick={this.toggleModalDetail} color=\"secondary\">Close</Button>\n  }  \n\n  render() {\n    return (\n      <div className=\"container\">\n        <Nav tabs>\n          <NavItem style={{ cursor: \"pointer\" }}>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"1\" })}\n              onClick={() => {\n                this.toggle(\"1\");\n              }}\n            >\n              Users\n            </NavLink>\n          </NavItem>\n          <NavItem style={{ cursor: \"pointer\" }}>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"2\" })}\n              onClick={() => {\n                this.toggle(\"2\");\n              }}\n            >\n              Posts\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <ListUser />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row className=\"mt-3\">\n              <Col sm={12}>\n                <PostAdmin onClickAction={this.onClickAction} postAdmin={this.props.postAdmin}/>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12}>\n                <CustomPagination\n                  pageCount={this.props.pageCountListPost}\n                  currentPage={this.props.currentPageListPost}\n                  changePage={(currentPage) => {\n                    this.props.getListPost(currentPage);\n                  }}\n                />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n        {this.renderModalDetail(this.state.postShow)}\n        {this.renderModalNoteReject()}\n        <AlertModal isOpen={this.state.isOpenAlert} message={this.state.message} toogle={this.toggleAlert} clickOk={this.clickOk}/>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  dispatchSetLoading\n}\n\nexport default connect(null, mapDispatchToProps)(Admin);\n","import { connect } from \"react-redux\";\r\nimport { getListUsers, getListPost } from \"./redux/action\";\r\nimport View from \"./View\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  listUser: state.admin.listUser,\r\n  postAdmin: state.admin.postAdmin,\r\n  currentPageListUser: state.admin.currentPageListUser,\r\n  pageCountListUser: state.admin.pageCountListUser,\r\n  pageCountListPost: state.admin.pageCountListPost,\r\n  currentPageListPost: state.admin.currentPageListPost\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getListUsers,\r\n  getListPost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\r\n","import * as React from \"react\";\nimport \"./App.scss\";\nimport Spinner from \"./components/Spinner\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Admin from \"./containers/Admin\";\nimport DeleteModal from \"./components/DeleteModal\";\n\nimport fixDropdown from \"./utils/fixDropdown\"\n\nconst AdminApp = () => {\n  React.useEffect(() => fixDropdown(), [])\n  return (\n    <Provider store={store}>\n      <Spinner />\n      <Admin />\n      <DeleteModal ref={DeleteModal.registerModal} />\n    </Provider>\n  );\n};\n\nexport default AdminApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AdminApp from './AdminApp';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nif(window.location.href.indexOf('/myposts') !== -1) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('app')\n  );\n} else {\n  console.log(window.location.href)\n  ReactDOM.render(\n    <React.StrictMode>\n      <AdminApp />\n    </React.StrictMode>,\n    document.getElementById('app')\n  );\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/default_image.440b9b23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye.ebb2e064.png\";"],"sourceRoot":""}